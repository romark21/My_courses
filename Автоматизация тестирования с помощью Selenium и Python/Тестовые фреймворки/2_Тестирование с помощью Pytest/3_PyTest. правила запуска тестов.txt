В этом шаге мы коротко обсудим важные особенности запуска тестов с помощью PyTest. Когда мы выполняем команду pytest,
тест-раннер собирает все тесты для запуска по определенным правилам:

 - если мы не передали никакого аргумента в команду, а написали просто pytest, тест-раннер начнёт поиск в текущей
директории

 - как аргумент можно передать файл, путь к директории или любую комбинацию директорий и файлов, например:

pytest scripts/selenium_scripts
# найти все тесты в директории scripts/selenium_scripts

pytest test_user_interface.py
# найти и выполнить все тесты в файле

pytest scripts/drafts.py::test_register_new_user_parametrized
# найти тест с именем test_register_new_user_parametrized в указанном файле в указанной директории и выполнить


Дальше происходит рекурсивный поиск: то есть PyTest обойдет все вложенные директории

Во всех директориях PyTest ищет файлы, которые удовлетворяют правилу  test_*.py или *_test.py
(то есть начинаются на test_ или заканчиваются _test и имеют расширение .py)

Внутри всех этих файлов находит тестовые функции по следующему правилу:
 - все тесты, название, которых начинается с test, которые находятся вне классов
 - все тесты, название, которых начинается с test внутри классов, имя которых начинается с Test
 (и без метода __init__ внутри класса)

Подробности:
https://docs.pytest.org/en/stable/explanation/goodpractices.html#conventions-for-python-test-discovery

С примерами
https://habr.com/ru/articles/448782/