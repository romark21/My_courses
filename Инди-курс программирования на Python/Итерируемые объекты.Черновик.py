"""
------------------------------------------------------------------------------------------------------------------
a, b = int(input()), int(input())

for i in range(a, b + 1):
    if i % 3 == 0 and i % 5 == 0:
        print("FizzBuzz")
    elif i % 3 == 0:
        print("Fizz")
    elif i % 5 == 0:
        print("Buzz")
    else:
        print(i)
------------------------------------------------------------------------------------------------------------------
"""
"""
------------------------------------------------------------------------------------------------------------------
# Квадрат и куб
# Давайте составим сводную информацию о квадратах и кубах интервала чисел.
#
# На вход программе подается два натуральных числа a и b (гарантируется, что a<b),
# после чего для каждого целого числа на интервале от a до b включительно необходимо вывести фразу следующего вида:
#
# «Число {число}; его квадрат = {квадрат}; его куб = {куб}»
#
# Кавычки выводить не нужно и пользуйтесь f-строкой.
#
# Формат входных данных
# На вход программе подается два натуральных числа a и b, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.
#
# Sample Input 1:
#
# 1
# 5
# Sample Output 1:
#
# Число 1; его квадрат = 1; его куб = 1
# Число 2; его квадрат = 4; его куб = 8
# Число 3; его квадрат = 9; его куб = 27
# Число 4; его квадрат = 16; его куб = 64
# Число 5; его квадрат = 25; его куб = 125
# Sample Input 2:
#
# 35
# 43
# Sample Output 2:
#
# Число 35; его квадрат = 1225; его куб = 42875
# Число 36; его квадрат = 1296; его куб = 46656
# Число 37; его квадрат = 1369; его куб = 50653
# Число 38; его квадрат = 1444; его куб = 54872
# Число 39; его квадрат = 1521; его куб = 59319
# Число 40; его квадрат = 1600; его куб = 64000
# Число 41; его квадрат = 1681; его куб = 68921
# Число 42; его квадрат = 1764; его куб = 74088
# Число 43; его квадрат = 1849; его куб = 79507

# 1 вариант
a, b = int(input()), int(input())

for i in range(a, b + 1):
    print(f"Число {i}; его квадрат = {i ** 2}; его куб = {i ** 3}")

# 2 вариант
for i in range(int(input()), int(input()) + 1):
    print(f"Число {i}; его квадрат = {i ** 2}; его куб = {i ** 3}")
------------------------------------------------------------------------------------------------------------------
"""

"""
------------------------------------------------------------------------------------------------------------------
# Кратные 3 или 5
# Если перечислить все натуральные числа ниже 10, которые кратны 3 или 5, то получим 3, 5, 6 и 9. Сумма этих чисел 23.
# 
# Напишите программу, которая принимает натуральное число n и находит сумму всех чисел ниже переданного числа n, 
# которые делятся на 3 или на 5.
# 
# Sample Input 1:
# 
# 10
# Sample Output 1:
# 
# 23
# Sample Input 2:
# 
# 9
# Sample Output 2:
# 
# 14


# 1 вариант
n = int(input())
numbers = []
for i in range(n):
    if i % 3 == 0 or i % 5 == 0:
        numbers.append(i)
print(sum(numbers))


# 2 вариант
print(sum(i for i in range(int(input())) if not i % 3 or not i % 5))


# 3 вариант
print(sum(i for i in range(int(input())) if i % 3 == 0 or i % 5 == 0))
------------------------------------------------------------------------------------------------------------------
"""

"""
------------------------------------------------------------------------------------------------------------------
# Напишите программу, которая найдет сумму кубов натуральных чисел от 50 до 100 включительно
# 
# 50 ** 3 + 51 ** 3 + 52 ** 3 + 53 ** 3 + ... + 100 ** 3

print(sum(i ** 3 for i in range(50, 101)))
------------------------------------------------------------------------------------------------------------------
"""

"""
------------------------------------------------------------------------------------------------------------------
# Мишка — маленький белый медвежонок. А как известно, маленькие медвежата в свободное время любят играть
# в кости на шоколадки. Одним замечательным солнечным утром, гуляя по льдинам, Мишка встретил своего друга Криса,
# которому и предложил сыграть в эту занимательную игру.
# 
# Правила её очень просты: сначала определяется значение n — количество раундов игры. В очередном раунде каждый из
# игроков один раз бросает стандартный игральный кубик, на грани которого нанесены различные числа от 1 до 6.
# Игрок, выбросивший большее значение, становится победителем в раунде. В случае, если выпавшие значения равны,
# победа не засчитывается никому.
# 
# В самой же игре побеждает участник, выигравший в большем количестве раундов. Если же количества побед,
# заслуженных игроками, равны, то объявляется ничья.
# 
# Мишка ещё совсем маленький и плохо умеет вести счёт,
# а потому попросил Вас понаблюдать за ходом игры и сообщить ему результат.
# 
# Входные данные
# 
# В первой строке входных данных содержится число n количество раундов игры.
# 
# Следующие n строк содержат описание раундов. В i-й из них содержится пара целых чисел mi и ci  — результаты бросков
# Мишки и Криса в i-ом раунде соответственно.
# 
# Выходные данные
# 
# В случае победы Мишки в единственной строке выведите "Mishka" (без кавычек), 
# а в случае победы Криса выведите "Chris" (без кавычек). Если же игра сведётся к ничьей, 
# то выведите "Friendship is magic!^^" (без кавычек).
# 
# PS: генерировать случайные числа(пользоваться модулем random) вам не нужно, данные для игры уже готовы. 
# Вам нужно только их считать,  и узнать кто же победил


# 1 вариант
n = int(input())
mishka = 0
chris = 0

for i in range(n):
    m, c = (map(int, input().split()))
    if m > c:
        mishka += 1
    elif m < c:
        chris += 1
if mishka > chris:
    print("Mishka")
elif mishka < chris:
    print("Chris")
else:
    print("Friendship is magic!^^")


# 2 вариант
n = int(input())
mishka = 0
chris = 0

for i in range(n):
    m, c = (map(int, input().split()))
    mishka += m > c
    chris += m < c

print("Mishka" if mishka > chris else "Chris" if mishka < chris else "Friendship is magic!^^")
------------------------------------------------------------------------------------------------------------------
"""

"""
------------------------------------------------------------------------------------------------------------------
# Найдите, в каких строках из введённых и в каком месте упоминается "рок", причем регистр букв не важен.
# 
# Вместо явного цикла прохода по строке в цикле используйте подходящий метод строки.
# 
# Формат ввода
# На первой строке вводится натуральное число N — количество строк.
# Далее следуют N строк.
# 
# Формат вывода
# Для каждой строки, в которой есть сочетание символов «рок»,
# нужно вывести (в порядке появления таких строк) номер этой строки (нумерация начинается с единицы) и номер символа,
# с которого начинается первое вхождение этой подстроки (нумерация символов также с единицы).
# 
# Разбор Youtube Patreon Boosty
# 
# Sample Input 1:
# 
# 3
# Порок
# Учитель
# Рок
# Sample Output 1:
# 
# 1 3
# 3 1
# Sample Input 2:
# 
# 5
# fdsfeewewfw
# fdsfwewef
# fdsfdsрокпккеннке
# щшощашоцщашцоаушоцРокдалвдаыв
# лазщцалуРоКдахзвыда
# Sample Output 2:
# 
# 3 7
# 4 19
# 5 9

# 1 вариант

n = int(input())
words = [input().lower() for i in range(n)]
string_number = 0

for i in words:
    string_number += 1
    if "рок" in i:
        print(string_number, i.index("рок") + 1)
        
# 2 вариант 

n = int(input())
for i in range (n):
    word = input().lower()
    if "рок" in word:
        print(i + 1, word.find("рок") + 1)
       
------------------------------------------------------------------------------------------------------------------
"""

"""
------------------------------------------------------------------------------------------------------------------
# Предположим, вы переписываете у друга рецепты в блокнотик, но вам не нравится "соль". Переписывайте без этого слова.
# 
# Формат ввода
# На первой строке вводится натуральное число N — количество пунктов рецепта.
# Далее следуют N строк — пункты рецепта.
# 
# Формат вывода
# Одна строка — пункты рецепта, разделённые запятой и пробелом, без пунктов с упоминанием слова "соль" (то есть таких,
# в которых нет подстроки "соль" в нижнем регистре).
# 
# Sample Input:
# 
# 5
# лук соль перец
# картофелин штук 3
# картошку пожарить и поперчить
# сварить морковь и добавить соль
# сварить суп
# Sample Output:
# 
# картофелин штук 3, картошку пожарить и поперчить, сварить суп

n = int(input())
recipe_item = []
for i in range(n):
    recipe = input()
    if "соль" not in recipe:
        recipe_item.append(recipe)
print(*recipe_item, sep=', ')
------------------------------------------------------------------------------------------------------------------
"""

# n = int(input())
# for i in range (n):
#     word = input()
#     if len(word) > 10:
#         print(f"{word[0]}{len(word) - 2}{word[-1]}")
#     else:
#         print(word)

"""
------------------------------------------------------------------------------------------------------------------
numbers = [-35, 68, -91, 23, -92, -82, -74, 32, 39, -30, -100, -29, 54, 26, 54, -45, 20, 53, -17, 68, -35, 11, 26,
 -17, 70, 89, -81, -4, 61, -45, 13, 63, -48, -66, -92, -15, -88, -87, -75, 44, -49, -81, 19, -33, -59, 85, -69, -60,
  9, -98, 28, 11, 15, -35, -80, 5, -20, -52, -45, 26, 47, -16, 40, -14, -12, 15, 73, -16, 29, -98, 93, -77, 1, 85, 77,
   73, 100, -71, 99, 39, 2, -38, 49, -31, 15, 43, 94, -39, -89, -46, -71, 39, -56, 41, -93, 4, -79, 48, 88, -51]

for i in range(len(numbers)):
    numbers[i] *= 2
print(numbers)
------------------------------------------------------------------------------------------------------------------
"""
"""
------------------------------------------------------------------------------------------------------------------
# Ваша задача создать список из n строк. Программа сперва будет принимать натуральное число n, 
# а затем n строк в каждой отдельной строке. В качестве ответа выведите получившийся список.
# 
# Sample Input 1:
# 
# 4
# Джон
# Пол
# Ринго
# Джордж
# Sample Output 1:
# 
# ['Джон', 'Пол', 'Ринго', 'Джордж']
# Sample Input 2:
# 
# 2
# black
# white
# Sample Output 2:
# 
# ['black', 'white']

list_of_words = []
for i in range(int(input())):
    list_of_words.append(input())
print(list_of_words)
------------------------------------------------------------------------------------------------------------------
"""

"""
------------------------------------------------------------------------------------------------------------------
# Входные данные
# На первой строке вводится один символ — строчная буква.
# На второй строке вводится предложение.
# 
# Выходные данные
# Нужно вывести список слов (словом считается часть предложения, окружённая символами пустого пространства), 
# в которых присутствует введённая буква в любом регистре, в том же порядке, в каком они встречаются в предложении.
# 
# Sample Input 1:
# 
# a
# Mary had a little lamb.
# Sample Output 1:
# 
# Mary
# had
# a
# lamb.
# Sample Input 2:
# 
# e
# Actions speak louder than words
# Sample Output 2:
# 
# speak
# louder
# Sample Input 3:
# 
# s
# Diane visited her friends who live in San Francisco
# Sample Output 3:
# 
# visited
# friends
# San
# Francisco

letter = input()
text = [i for i in input().split()]   # Так же само создаст список. text = input().split()

for i in text:
    if letter in i.lower():
        print(i)
        
------------------------------------------------------------------------------------------------------------------
"""
# numbers = input().split()
# r = input()
#
# for i in range(len(numbers)):
#     if r in numbers[i]:
#         print(i + 1)
#         break
# else:
#     print("ErrorValue")


"""
------------------------------------------------------------------------------------------------------------------
# На вход программе поступает список из целых чисел. Ваша задача найти в данном списке наименьшее положительное значение.
# В случае, если положительных значений нет, выведите строку "Empty"
# 
# Sample Input 1:
# 
# 8 11 -9 0 5 -20
# Sample Output 1:
# 
# 5
# Sample Input 2:
# 
# 5 -2 -1 18 4 -6
# Sample Output 2:
# 
# 4
# Sample Input 3:
# 
# -4 -7 0 -19
# Sample Output 3:
# 
# Empty


numbers_lst = [int(i) for i in input().split()]
smallest_num = []

if max(numbers_lst) <= 0:
    print("Empty")

else:
    for i in numbers_lst:
        if i > 0:
            smallest_num.append(i)

    print(max(smallest_num))
------------------------------------------------------------------------------------------------------------------
"""
"""
------------------------------------------------------------------------------------------------------------------
# Напишите программу, которая находит рекордное количество вхождений (не обязательно подряд) символа в строку.
# 
# Формат ввода
# Вводится одна строка.
# 
# Формат вывода
# Выводится одно целое число — максимальное количество раз, которое встречается какая-либо буква (без учёта регистра)
# или иной символ во введённой строке.
# 
# Sample Input 1:
# 
# Сокол
# Sample Output 1:
# 
# 2
# Sample Input 2:
# 
# Тот
# Sample Output 2:
# 
# 2

word = input().lower()
max_letter_count = []
for i in word:
    max_letter_count.append(word.count(i))

print(max(max_letter_count))
------------------------------------------------------------------------------------------------------------------
"""
"""
------------------------------------------------------------------------------------------------------------------
# Для делимости числа на 11 необходимо, чтобы разность между суммой цифр, стоящих на четных местах, и суммой цифр,
# стоящих на нечетных местах, делилась на 11.
# 
# Требуется написать программу, которая проверит делимость заданного числа на 11.
# 
# Входные данные
# Программа получает на вход одно натуральное число N, делимость которого надо проверить (1 ≤ N ≤ 1010000).
# 
# Выходные данные
# Выведите “YES”, если число делится на 11, или “NO” иначе.
# 
# Разбор задачи Youtube Patreon Boosty
# 
# Sample Input 1:
# 
# 1211
# Sample Output 1:
# 
# NO
# Sample Input 2:
# 
# 143
# Sample Output 2:
# 
# YES
# Sample Input 3:
# 
# 87635064
# Sample Output 3:
# 
# YES
# Sample Input 4:
# 
# 87635063
# Sample Output 4:
# 
# NO


number = input()
even_numbers = 0
odd_numbers = 0
for i in range(len(number)):
    if i % 2 == 0:
        even_numbers += int(number[i])
    else:
        odd_numbers += int(number[i])

if abs(even_numbers - odd_numbers) % 11 == 0:
    print("YES")
else:
    print("NO")
------------------------------------------------------------------------------------------------------------------
"""

"""
------------------------------------------------------------------------------------------------------------------
# На вход программе подается строка, состоящая из различных символов: буквы, цифры, знаки препинания и т.д.
# 
# Ваша задача определить сколько символов в данной строке являются цифрами и также найти сумму всех этих цифр.
# Например, в строке "Комната 1408" содержится 4 цифры и их сумма равна 13.
# 
# В качестве ответа необходимо через пробел вывести 2 числа - количество цифр в введенной строке и их сумму
# 
# Sample Input 1:
# 
# Droid R2-D2
# Sample Output 1:
# 
# 2 4
# Sample Input 2:
# 
# Europe cup 2021
# Sample Output 2:
# 
# 4 5

words_nums = input()
ints = []
for i in words_nums:
    if i.isdigit():
        ints.append(int(i))

print(len(ints), sum(ints))
------------------------------------------------------------------------------------------------------------------
"""

"""
------------------------------------------------------------------------------------------------------------------
# Одна из стандартных задач на программирование. Подумайте над способом ее решения, если не приходит ничего в голову,
# загляните в подсказку)
#
# Итак, у нас есть последовательность скобочных символов, состоящая только из символов ( и )
#
# Ваша задача определить является ли введенная скобочная последовательность правильной.
#
# Правильная скобочная последовательность (ПСП) называется строка, состоящая только символов "скобок",
# где каждой закрывающей скобке найдётся соответствующая открывающая. При этом учитывайте, что:
#
# Пустая последовательность является правильной.
# Если A – правильная скобочная последовательность, то (A) – правильные скобочные последовательности.
# Если A и B – правильные скобочные последовательности, то AB – правильная скобочная последовательность.
# Если введенная строка является ПСП, выведите YES, в противном случае - NO.
#
# 🚀Если не справляетесь, здесь подсказка🚀
# Sample Input 1:
#
# (())
# Sample Output 1:
#
# YES
# Sample Input 2:
#
# (()
# Sample Output 2:
#
# NO
# Sample Input 3:
#
# ())
# Sample Output 3:
#
# NO
# Sample Input 4:
#
# ()()
# Sample Output 4:
#
# YES
# Sample Input 5:
#
# ))((
# Sample Output 5:
#
# NO
# Sample Input 6:
#
# ()())
# Sample Output 6:
#
# NO
# Sample Input 7:
#
# )(
# Sample Output 7:
#
# NO


#1 Вариант
line = input()
open_bracket = 0
close_bracket = 0
if line[0] == ")" or "))((" in line:
    print("NO")

else:
    for i in line:
        if i == "(":
            open_bracket += 1
        elif i == ")":
            close_bracket += 1
    print("YES" if open_bracket == close_bracket else "NO")


#2 Вариант
line = input()
bracket_count = 0

for i in line:
    if i == "(":
        bracket_count += 1
    elif i == ")":
        bracket_count -= 1
    if bracket_count < 0:
        print("NO")
        break
else:
    print("YES" if bracket_count == 0 else "NO")
------------------------------------------------------------------------------------------------------------------
"""

"""
------------------------------------------------------------------------------------------------------------------
# Наша программа принимает на вход последовательность скобочных символов. Ваша задача определить является ли введенная
# скобочная последовательность правильной.
# 
# Правильная скобочная последовательность (ПСП) называется строка, состоящая только из символов "скобки",
# где каждой закрывающей скобке найдётся соответствующая открывающая (причём того же типа). При этом учитывайте, что:
# 
# Пустая последовательность является правильной.
# Если A – правильная скобочная последовательность, то (A), [A] и {A} – правильные скобочные последовательности.
# Если A и B – правильные скобочные последовательности, то AB – правильная скобочная последовательность.
# Если введенная строка является ПСП, выведите YES, в противном случае - NO.
# 
# Разбор решения задачи
# 
# Sample Input 1:
# 
# []
# Sample Output 1:
# 
# YES
# Sample Input 2:
# 
# [(])
# Sample Output 2:
# 
# NO
# Sample Input 3:
# 
# {[]}()
# Sample Output 3:
# 
# YES


line = input()
stack = []
is_good = True

for i in line:
    if i in "({[":
        stack.append(i)
    elif i in ")}]":
        if not stack:
            is_good = False
            break
        open_branket = stack.pop()
        if open_branket == "(" and i == ")":
            continue
        if open_branket == "[" and i == "]":
            continue
        if open_branket == "{" and i == "}":
            continue
        is_goog = False
        break



if is_good and len(stack) == 0:
    print("YES")
else:
     print("NO")
------------------------------------------------------------------------------------------------------------------
"""
"""
------------------------------------------------------------------------------------------------------------------
# На вход программе поступает строка, состоящая из нескольких слов,
# знаком разделителем между словами будем считать символ пробела. Ваша задача исключить из строки дублирующие слова:
# первое появление слова остается в строке, второе и все последующие появления исключаются.
# При сравнении на дубли строк регистр букв не учитывать, это значит слова python и PyThOn считаются одинаковыми.
#
# В качестве ответа необходимо вывести итоговую строку без дублей.
#
# Sample Input 1:
#
# Python is best I love python
# Sample Output 1:
#
# Python is best I love
# Sample Input 2:
#
# one one two two three four four five six six one two three four five six
# Sample Output 2:
#
# one two three four five six
# Sample Input 3:
#
# Two one One SIX two thrEE four four five SIX six one two three four five six ONE
# Sample Output 3:
#
# Two one SIX thrEE four five


words = input().split()
stack = []
for i in words:
    if i.lower() not in stack:
        stack.append(i.lower())
        print(i, end=' ')


print(type(words))
------------------------------------------------------------------------------------------------------------------
"""

"""
------------------------------------------------------------------------------------------------------------------
# n = [int(i) for i in input()]
# list_num = [0] * (max(n) + 1)
#
# for i in n:
#    list_num[i] += 1
#
# for i in range(len(list_num)):
#     if list_num[i] > 0:
#         print(i, list_num[i])


# n = ([i for i in input()] * range(int(input())))

n = int(input())
num_list = [int(i) for i in input().split()]
count_list = [0] * 201

for i in num_list:
    count_list[i + 100] += 1

for i in range(len(count_list)):
    if count_list[i] > 0:
        print((str(i - 100) + ' ') * count_list[i], end='')
------------------------------------------------------------------------------------------------------------------
"""