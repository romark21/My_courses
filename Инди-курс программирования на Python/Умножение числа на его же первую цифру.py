# Возьмём число. Умножим его на его же первую цифру. Результат умножим на первую цифру результата. И так далее.
# Например, начнём с 8:
#
#
# 8→8∗8=64
# 64→6∗64=384
# 384→3∗384=1152
# 1152→1∗1152=1152
# 8→8∗8=64
# 64→6∗64=384
# 384→3∗384=1152
# 1152→1∗1152=1152
#
#
# Очевидно, когда первая цифра очередного числа в такой последовательности становится равной 1,
# числа перестают изменяться. Но это происходит не при всех начальных числах.
#
# Напишем программу, которая будет хотя бы приблизительно определять судьбу введённого числа n.
#
# Начиная с числа n, умножайте имеющееся число на его первую цифру,
# пока у получившегося числа первая цифра не станет равной 1, либо пока оно не превысит миллиарда.
# В качестве ответа выведите результат
#
# Решение youtube patreon boosty
#
# Sample Input 1:
#
# 8
# Sample Output 1:
#
# 1152
# Sample Input 2:
#
# 223
# Sample Output 2:
#
# 1784
# Sample Input 3:
#
# 929
# Sample Output 3:
#
# 1605312
# Sample Input 4:
#
# 360
# Sample Output 4:
#
# 1080

# 1 Вариант
num = int(input())

while str(num)[0] != '1' and num < 1000000000:
    num *= int(str(num)[0])
print(num)


# 2 Вариант
num = input()
res = int(num)

while num[0] != '1' and res < 1000000000:
    res *= int(num[0])
    num = str(res)
print(res)