# coding: utf8
"""
------------------------------------------------------------------------------------------------------------------
# При помощи list comprehension создайте список, состоящий из нечетных натуральных чисел в интервале [n;n2] и вывести
# его на экран. Само число n поступает на вход программе
#
# Формат ввода:
# Вводится натуральное число n.
#
# Формат вывода:
# Вывести список, содержащий нечетные натуральные числа в интервале  [n;n2]
#
# Sample Input 1:
#
# 7
# Sample Output 1:
#
# [7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49]
# Sample Input 2:
#
# 4
# Sample Output 2:
#
# [5, 7, 9, 11, 13, 15]

n = int(input())
print([i for i in range(n, n ** 2 + 1) if i % 2])

------------------------------------------------------------------------------------------------------------------
"""

"""
------------------------------------------------------------------------------------------------------------------
# Программа принимает на вход два целых числа a и b.
# 
# Если a<=b необходимо сформировать список квадратов целых чисел на интервале от а до b включительно и вывести
# его на экран.
# 
# Если же a>b, необходимо сформировать список кубов целых чисел на интервале от a до b включительно,
# двигаясь в порядке убывания, и затем вывести его.
# 
# Не забывайте пользоваться генератором списков 
# 
# Sample Input 1:
# 
# 1 5
# Sample Output 1:
# 
# [1, 4, 9, 16, 25]
# Sample Input 2:
# 
# 3 1
# Sample Output 2:
# 
# [27, 8, 1]
# Sample Input 3:
# 
# 10 13
# Sample Output 3:
# 
# [100, 121, 144, 169]

a, b = map(int, input().split())
print([i ** 2 for i in range(a, b + 1)] if a <= b else [i ** 3 for i in range(a, b - 1, -1)])
------------------------------------------------------------------------------------------------------------------
"""
"""
------------------------------------------------------------------------------------------------------------------
# Создайте список первых букв каждого слова из строки st и выведите его на экран

st = 'Create a list of the first letters of every word in this string'
# Через листкомприхеншн
print([i[0] for i in st.split()])

# Обычным циклом
a = st.split()
for i in a:
    print(i[0], end=',')
------------------------------------------------------------------------------------------------------------------
"""

"""
------------------------------------------------------------------------------------------------------------------
# При помощи list comprehension создайте список, состоящий из первых n заглавных букв английского алфавита
# ['A', 'B', 'C', 'D', ...]. Получить все заглавные буквы английского алфавита можно следующим образом:
# 
# from string import ascii_uppercase
# print(ascii_uppercase) # выведет строку ABCDEFGHIJKLMNOPQRSTUVWXYZ
# Входные данные
# На вход программе подается натуральное число n, n≤26.
# 
# Формат выходных данных
# Программа должна вывести список из первых n заглавных букв английского алфавита
# 
# Sample Input 1:
# 
# 3
# Sample Output 1:
# 
# ['A', 'B', 'C']
# Sample Input 2:
# 
# 5
# Sample Output 2:
# 
# ['A', 'B', 'C', 'D', 'E']
# Sample Input 3:
# 
# 9
# Sample Output 3:
# 
# ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I']

from string import ascii_uppercase

print([ascii_uppercase[i] for i in range(int(input()))])

------------------------------------------------------------------------------------------------------------------
"""

"""
------------------------------------------------------------------------------------------------------------------
# Давайте усовершенствуем предыдущую задачу так, чтобы получался следующий список букв:
# 
# ['A', 'BB', 'CCC', 'DDDD', 'EEEEE', 'FFFFFF', ...]
# Входные данные
# На вход программе подается натуральное число n, n ≤ 26.
# 
# Формат выходных данных
# Программа должна вывести список из первых n заглавных букв английского алфавита, 
# причем каждая буква должна быть продублирована в зависимости от своего порядкового номера
# 
# Sample Input 1:
# 
# 3
# Sample Output 1:
# 
# ['A', 'BB', 'CCC']
# Sample Input 2:
# 
# 5
# Sample Output 2:
# 
# ['A', 'BB', 'CCC', 'DDDD', 'EEEEE']
# Sample Input 3:
# 
# 9
# Sample Output 3:
# 
# ['A', 'BB', 'CCC', 'DDDD', 'EEEEE', 'FFFFFF', 'GGGGGGG', 'HHHHHHHH', 'IIIIIIIII']

from string import ascii_uppercase

print([ascii_uppercase[i] * (i + 1) for i in range(int(input()))])
------------------------------------------------------------------------------------------------------------------
"""
# При помощи генератора-списков создайте список, состоящий из слов,  начинающихся с буквы 't' или 'T'.
# Слова возьмите из переменной phrase, также не забывайте про метод split()
#
# В качестве ответа выведите полученный список, слова в нем должны стоять в том же порядке,
# в котором они стояли в изначальной фразе.

"""
------------------------------------------------------------------------------------------------------------------
phrase = 'Take only the words that start with t in this sentence'
print([i for i in phrase.split() if i[0] in ('t', 'T')])
------------------------------------------------------------------------------------------------------------------
"""